---
import { type CollectionEntry } from 'astro:content';

// Utility to strip common markdown characters
const stripMarkdown = (text: string) => text.replace(/[#_*>\[\]\(\)`~\-\+!]/g, '');

type Props = { post: CollectionEntry<'blog'>; class?: string; headingLevel?: 'h2' | 'h3' };

const { post, class: className, headingLevel = 'h2' } = Astro.props;
const { title, publishDate, excerpt, featuredImage } = post.data;
const rawContent = typeof post.body === 'string' ? post.body : '';
const initialPreview = excerpt || rawContent.slice(0, 300) + (rawContent.length > 300 ? '...' : '');
const previewText = stripMarkdown(initialPreview);
const TitleTag = headingLevel;
const postId = post.id;
---

<article class={`flex flex-col gap-4 ${className}`}>
  <TitleTag class="text-2xl font-serif font-medium">
    {title}
  </TitleTag>
  <div class="text-sm text-gray-500">
    {/* Date in Spanish for Lima timezone */}
    {new Date(publishDate).toLocaleDateString('es-PE', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      timeZone: 'America/Lima',
    })}
  </div>
  {featuredImage && (
    <div class="flex justify-center">
      <img
        src={featuredImage}
        alt={title}
        class="w-full max-h-[450px] object-contain rounded-md"
      />
    </div>
  )}
  <div class="text-base leading-relaxed">
    {previewText}
  </div>
  <div class="mt-4 flex items-center">
    <a
      href={`/${postId}/`}
      class="px-5 py-2 bg-black text-white text-sm font-medium"
    >
      Seguir leyendo
    </a>
    <hr class="flex-grow border-t border-gray-300 ml-4" />
  </div>
</article>
